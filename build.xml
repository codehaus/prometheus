<!-- Build file for ANT -->

<project name="Prometheus" default="dist.bin">

    <property name="version.main"           value="0.1"/>
    <property name="name.main"              value="prometheus"/>
    <property name="name.testsupport"       value="prometheus-testsupport"/>

    <property name="src"                    value="src"/>
    <property name="src.main"               value="${src}/main"/>
    <property name="src.test"               value="${src}/test"/>
    <property name="src.testsupport"        value="${src}/testsupport"/>
    <property name="src.stresstest"         value="${src}/stresstest"/>
    <property name="src.sandbox"            value="src-sandbox/sandbox"/>
    <property name="lib"                    value="lib"/>
    <property name="lib.provided"           value="${lib}/provided"/>
    <property name="lib.support"            value="${lib}/support"/>
    <property name="doc"                    value="doc"/>


    <property name="target"                 value="target"/>
    <property name="metrics"                value="${target}/metrics"/>
    <property name="checkstyle"             value="${target}/checkstyle"/>
    <property name="findbugs"               value="${target}/findbugs"/>
    <property name="javadoc.main"           value="${target}/javadoc.main"/>
    <property name="javadoc.testsupport"    value="${target}/javadoc.testsupport"/>
    <property name="classes.main"           value="${target}/classes.main"/>
    <property name="classes.testsupport"    value="${target}/classes.testsupport"/>
    <property name="classes.tests"          value="${target}/classes.test"/>
    <property name="classes.sandbox"        value="${target}/classes.sandbox"/>
    <property name="unitreports"            value="${target}/junit-reports"/>

    <path id="classpath.provided">
        <fileset dir="${lib.provided}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.support">
        <fileset dir="${lib.support}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="javancss"
             classname="javancss.JavancssAntTask"
             classpathref="classpath.support"/>

    <taskdef resource="checkstyletask.properties"
             classpathref="classpath.support"/>

    <taskdef name="findbugs"
             classpathref="classpath.support"
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

    <!-- taskdef name="jdepend"
             classname="org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask"
             classpathref="classpath.support"/ -->

    <target name="init">
        <tstamp/>
    </target>

    <target name="clean"
            description="Removes all generated files">
        <delete dir="${target}"/>
    </target>

    <target name="compile.main"
            description="Compiles the sources of the main package"
            depends="init">

        <mkdir dir="${classes.main}"/>

        <javac debug="on"
               srcdir="${src.main}"
               destdir="${classes.main}"
               source="1.5">
            <classpath>
                <path refid="classpath.provided"/>
            </classpath>
        </javac>
    </target>

    <target name="compile.sandbox"
            description="Compiles the sources of the sandbox package"
            depends="compile.main">

        <mkdir dir="${classes.sandbox}"/>

        <javac debug="on"
               srcdir="${src.sandbox}"
               destdir="${classes.sandbox}"
               source="1.5">
            <classpath>
                <path refid="classpath.provided"/>
                <pathelement path="${classes.main}/"/>
            </classpath>
        </javac>
    </target>

    <target name="compile.test"
            description="Compiles the sources of the tests"
            depends="compile.main,compile.testsupport">

        <mkdir dir="${classes.tests}"/>

        <javac debug="on" source="1.5" srcdir="${src.test}" destdir="${classes.tests}">
            <classpath>
                <pathelement path="${classes.main}/"/>
                <pathelement path="${classes.testsupport}/"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>
        </javac>
    </target>

    <target name="compile.testsupport"
            description="Compiles the sources of testsupport"
            depends="compile.main">

        <mkdir dir="${classes.testsupport}"/>

        <javac debug="on"
               srcdir="${src.testsupport}"
               destdir="${classes.testsupport}"
               source="1.5">
            <classpath>
                <pathelement path="${classes.main}/"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>
        </javac>
    </target>

    <target name="compile.all"
            description="Compiles all sources"
            depends="compile.main,compile.testsupport,compile.test,compile.sandbox"/>

    <target name="javadoc.main"
            description="Generates Javadoc for the main package"
            depends="compile.main">

        <delete dir="${javadoc.main}"/>
        <mkdir dir="${javadoc.main}"/>

        <javadoc author="true"
                 destdir="${javadoc.main}"
                 packagenames="org.codehaus.prometheus.*"
                 sourcepath="${src.main}"
                 use="true"
                 version="true"
                 windowtitle="Prometheus"
                 private="false">
            <!--classpath refid="compile.classpath"/ -->
        </javadoc>
    </target>

    <target name="javadoc.testsupport"
            description="Generates Javadoc for the testsupport package"
            depends="compile.testsupport">

        <delete dir="${javadoc.testsupport}"/>
        <mkdir dir="${javadoc.testsupport}"/>

        <javadoc author="true"
                 destdir="${javadoc.testsupport}"
                 packagenames="org.codehaus.prometheus.*"
                 sourcepath="${src.testsupport}"
                 use="true"
                 version="true"
                 windowtitle="Prometheus Testsupport"
                 private="false">
            <!--classpath refid="compile.classpath"/ -->
        </javadoc>
    </target>

    <target name="javadoc.all"
            depends="javadoc.main,javadoc.testsupport"
            description="Generates Javadoc for all packages"/>

    <target name="jar.main"
            depends="compile.main"
            description="Builds the main jar">

        <mkdir dir="${target}"/>

        <jar jarfile="${target}/${name.main}-${version.main}.jar"
             basedir="${classes.main}"/>
    </target>

    <target name="jar.testsupport"
            depends="compile.testsupport"
            description="Builds the jar for testsupport">

        <mkdir dir="${target}"/>

        <jar jarfile="${target}/${name.testsupport}-${version.main}.jar"
             basedir="${classes.testsupport}"/>
    </target>

    <target name="jar.sandbox"
            depends="compile.sandbox"
            description="Builds the jar for the sandbox module">

        <mkdir dir="${target}"/>

        <jar jarfile="${target}/${name.main}-sandbox-${version.main}.jar"
             basedir="${classes.sandbox}"/>
    </target>

    <target name="jar.all"
            depends="jar.main,jar.sandbox,jar.testsupport"
            description="build all jars"/>

    <target name="dist.bin"
            depends="clean,jar.all,test.main,javadoc.all"
            description="Makes the binary distribution">

        <zip file="${target}/${name.main}-${version.main}.zip">
            <zipfileset file="License.html"
                        prefix="${name.main}-${version.main}"/>
            <zipfileset file="license.css"
                        prefix="${name.main}-${version.main}"/>
            <zipfileset file="${target}/${name.main}-${version.main}.jar"
                        prefix="${name.main}-${version.main}"/>
            <zipfileset file="${target}/${name.testsupport}-${version.main}.jar"
                        prefix="${name.main}-${version.main}"/>
            <zipfileset dir="${lib}"
                        prefix="${name.main}-${version.main}/lib"/>
            <zipfileset dir="${javadoc.main}"
                        prefix="${name.main}-${version.main}/doc/api-main"/>
            <zipfileset dir="${doc}"
                        prefix="${name.main}-${version.main}/doc"/>
            <zipfileset dir="${javadoc.testsupport}"
                        prefix="${name.main}-${version.main}/doc/api-testsupport"/>
        </zip>
    </target>

    <target name="test.main"
            description="Executes standard tests"
            depends="compile.main,compile.test">

        <mkdir dir="${unitreports}"/>

        <junit haltonfailure="no" fork="on" printsummary="on" filtertrace="off">
            <classpath>
                <pathelement path="${classes.main}/"/>
                <pathelement path="${classes.testsupport}/"/>
                <pathelement path="${classes.tests}/"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>
            <jvmarg value="-ea"/>
            <formatter type="plain"/>
            <formatter type="xml"/>
            <batchtest todir="${unitreports}">
                <fileset dir="${src.test}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*AbstractTest.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${unitreports}">
            <fileset dir="${unitreports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${unitreports}/html"/>
        </junitreport>               
    </target>

    <target name="test.stress"
            description="Executes the stress tests"
            depends="compile.main,compile.test">

        <mkdir dir="${classes.tests}"/>

        <javac debug="on" source="1.5" srcdir="${src.stresstest}" destdir="${classes.tests}">
            <classpath>
                <pathelement path="${classes.main}/"/>
                <pathelement path="${classes.testsupport}/"/>
                <pathelement path="${classes.tests}/"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>
        </javac>

        <mkdir dir="${unitreports}"/>

        <junit haltonfailure="no" fork="on" printsummary="on">
            <classpath>
                <pathelement path="${classes.main}/"/>
                <pathelement path="${classes.testsupport}/"/>
                <pathelement path="${classes.tests}/"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>
            <jvmarg value="-ea"/>
            <formatter type="plain"/>
            <batchtest todir="${unitreports}">
                <fileset dir="${src.stresstest}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*AbstractTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.all"
            description="Runs all the tests"
            depends="test.main,test.stress"/>


    <target name="metrics.main"
            depends="compile.main"
            description="Creates metrics report for the main module">

        <mkdir dir="${metrics}"/>

        <!-- jdepend format="xml" outputfile="${metrics}/jdepend-report.xml">
            <exclude name="java.*"/>
            <exclude name="javax.*"/>
            <classespath>
                <path refid="classpath.provided"/>
                <pathelement path="${classes.main}/"/>
            </classespath>
        </jdepend>

        <style  basedir="docs"
                destdir="docs"
                includes="${metrics}/jdepend-report.xml"
                style="${ant.home}/etc/jdepend.xsl" /> -->


        <javancss   srcdir="${src.main}"
                    includes="**/*.java"
                    generateReport="true"
                    outputfile="${metrics}/javancss_main.xml"
                    format="xml"/>

        <xslt  basedir="${metrics}"
               includes="javancss_main.xml"
                destdir="${metrics}"
                extension=".html"
                style="lib/support/javancss/javancss2html.xsl"/>
     </target>

    <target name="checkstyle.main"
            depends="compile.main"
            description="Creates a checkstyle report for the main module">

        <mkdir dir="${checkstyle}"/>
        
        <checkstyle config="sun_checks.xml" failOnViolation="false">
            <fileset dir="${src.main}"
                     includes="**/*.java"/>

            <!-- Location of cache-file. Something that is project specific -->
            <property key="checkstyle.cache.file"
                      file="${checkstyle}/cachefile"/>
            <formatter type="xml"
                       toFile="${checkstyle}/checkstyle_errors.xml"/>
        </checkstyle>

        <xslt style="lib/support/checkstyle/checkstyle-frames-errors.xsl"
              in="${checkstyle}/checkstyle_errors.xml"
              out="${checkstyle}/checkstyle_report.html">
            <param name="output.dir" expression="${checkstyle}"/>
        </xslt>
    </target>

    <target name="findbugs.main"
            depends="compile.main"
            description="Creates a findbugs report for the main module">

        <mkdir dir="${findbugs}"/>

         <findbugs home="${findbugs.home}"
              output="xml"
              outputFile="bcel-fb.xml" >
            <auxClasspath path="${basedir}/lib/Regex.jar" />
            <sourcePath path="${basedir}/src/java" />
            <class location="${basedir}/bin/bcel.jar" />
        </findbugs>

        <!-- xslt style="lib/support/checkstyle/checkstyle-frames-errors.xsl"
              in="${checkstyle}/checkstyle_errors.xml"
              out="${checkstyle}/checkstyle_report.html">
            <param name="output.dir" expression="${checkstyle}"/>
        </xslt -->
    </target>
</project>
