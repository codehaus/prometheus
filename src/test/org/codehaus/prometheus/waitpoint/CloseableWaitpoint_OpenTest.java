/*
 * Copyright (c) 2007 Peter Veentjer
 *
 * This program is made available under the terms of the MIT License.
 */
package org.codehaus.prometheus.waitpoint;

/**
 * Unittests the {@link org.codehaus.prometheus.waitpoint.CloseableWaitpoint#open()} method.
 *
 * @author Peter Veentjer.
 */
public class CloseableWaitpoint_OpenTest extends CloseableWaitpoint_AbstractTest {

    //==============================================

    public void testClosed_startUninterrupted(){
        testClosed(false);
    }

    public void testClosed_startInterrupted(){
        testClosed(true);
    }

    public void testClosed(boolean startInterrupted) {
        newClosedCloseableWaitpoint();
        OpenThread openThread1 = scheduleOpen(startInterrupted);
        OpenThread openThread2 = scheduleOpen(startInterrupted);

        joinAll(openThread1,openThread2);
        assertIsOpen();
      
        openThread1.assertIsTerminatedWithInterruptStatus(startInterrupted);
        openThread2.assertIsTerminatedWithInterruptStatus(startInterrupted);
    }

    //==============================================

    public void testAlreadyOpen_startInterrupted(){
        testAlreadyOpen(true);
    }

    public void testAlreadyOpen_startUninterrupted(){
        testAlreadyOpen(false);
    }

    public void testAlreadyOpen(boolean startInterrupted){
        newOpenCloseableWaitpoint();        
        OpenThread openThread1 = scheduleOpen(startInterrupted);
        OpenThread openThread2 = scheduleOpen(startInterrupted);

        joinAll(openThread1,openThread2);
        assertIsOpen();

        openThread1.assertIsTerminatedWithInterruptStatus(startInterrupted);
        openThread2.assertIsTerminatedWithInterruptStatus(startInterrupted);
    }
}
